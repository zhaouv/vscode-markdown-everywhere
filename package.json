{
    "name": "vscode-markdown-everywhere",
    "displayName": "Markdown Everywhere",
    "description": "Embed and highlight and preview markdown everywhere. e.g. Quickly preview LaTeX/ Highlight python markdown cell/ Highlight julia markdown doc string",
    "version": "0.0.16",
    "publisher": "zhaouv",
    "license": "Apache",
    "repository": {
        "url": "https://github.com/zhaouv/vscode-markdown-everywhere.git"
    },
    "bugs": {
        "url": "https://github.com/zhaouv/vscode-markdown-everywhere/issues"
    },
    "engines": {
        "vscode": "^1.21.99"
    },
    "categories": [
        "Programming Languages"
    ],
    "keywords": [
        "markdown",
        "embed",
        "preview",
        "vscode",
        "cell",
        "highlight"
    ],
    "scripts": {
        "build": "node ./build/build"
    },
    "main": "./build/extension",
    "contributes": {
        "commands": [
            {
                "command": "markdown-everywhere.showPreviewToSide",
                "title": "Preview Embedded Markdown",
                "icon": "$(open-preview)"
            },
            {
                "command": "markdown-everywhere.buildMarkdownEmbeddingRules",
                "title": "Build Markdown Embedding Rules"
            },
            {
                "command": "markdown-everywhere.extractMarkdown",
                "title": "Extract as Markdown to Clipboard"
            }
        ],
        "markdown.markdownItPlugins": true,
        "configuration": {
            "type": "object",
            "title": "Markdown Everywhere",
            "properties": {
                "markdown-everywhere.enhancing-typing": {
                    "type": "boolean",
                    "default": true,
                    "description": "Inject onEnterRules to markdown (reload needed). After opening, extra characters will be added when editing markdown and pressing enter."
                },
                "markdown-everywhere.preview-mode": {
                    "type": "string",
                    "default": "folded",
                    "enum": [
                        "splitter",
                        "ignored",
                        "fenced",
                        "folded",
                        "raw"
                    ],
                    "description": "How to deal with the original source code (change file-content to trigger). 'splitter' for ignoring them and put lines as splitter. 'ignore' for ignoring. 'fenced' for showing source code as fenced code. 'folded' for showing source code as folded fenced code. 'raw' do nothing regard source code as markdown. Use 'preview-mode-language' to set for respective languages."
                },
                "markdown-everywhere.preview-mode-language": {
                    "type": "object",
                    "default": {},
                    "description": "preview-mode for respective languages. e.g. {\"latex\":\"raw\"}"
                },
                "markdown-everywhere.preview-mode-inject": {
                    "type": "array",
                    "default": [],
                    "description": "do some actions in parsing. see README.md for details."
                },
                "markdown-everywhere.customized-rules": {
                    "type": "array",
                    "default": [
                        "defaultRules"
                    ],
                    "description": "Save the first element \"defaultRules\" to keep default rules. Remove to only use customized rules. See README.md#Customize for details"
                },
                "markdown-everywhere.auto-preview": {
                    "type": "array",
                    "default": [],
                    "description": "Automatically open the Markdown preview to the side when opening an editor with a listed language. e.g.[\"haskell\",\"purescript\"]"
                }
            }
        },
        "menus": {
            "editor/context": [
                {
                    "command": "markdown-everywhere.extractMarkdown",
                    "when": "editorFocus",
                    "group": "5_cutcopypaste"
                }
            ],
            "editor/title": [
                {
                    "command": "markdown-everywhere.showPreviewToSide",
                    "when": "editorLangId == 'coffeescript' && !notebookEditorFocused || editorLangId == 'dockerfile' && !notebookEditorFocused || editorLangId == 'git-commit' && !notebookEditorFocused || editorLangId == 'git-rebase' && !notebookEditorFocused || editorLangId == 'diff' && !notebookEditorFocused || editorLangId == 'ignore' && !notebookEditorFocused || editorLangId == 'properties' && !notebookEditorFocused || editorLangId == 'makefile' && !notebookEditorFocused || editorLangId == 'perl' && !notebookEditorFocused || editorLangId == 'perl6' && !notebookEditorFocused || editorLangId == 'powershell' && !notebookEditorFocused || editorLangId == 'python' && !notebookEditorFocused || editorLangId == 'r' && !notebookEditorFocused || editorLangId == 'ruby' && !notebookEditorFocused || editorLangId == 'shellscript' && !notebookEditorFocused || editorLangId == 'yaml' && !notebookEditorFocused || editorLangId == 'cython' && !notebookEditorFocused || editorLangId == 'julia' && !notebookEditorFocused || editorLangId == 'cmake' && !notebookEditorFocused || editorLangId == 'c' && !notebookEditorFocused || editorLangId == 'cpp' && !notebookEditorFocused || editorLangId == 'csharp' && !notebookEditorFocused || editorLangId == 'css' && !notebookEditorFocused || editorLangId == 'go' && !notebookEditorFocused || editorLangId == 'groovy' && !notebookEditorFocused || editorLangId == 'hlsl' && !notebookEditorFocused || editorLangId == 'java' && !notebookEditorFocused || editorLangId == 'javascriptreact' && !notebookEditorFocused || editorLangId == 'javascript' && !notebookEditorFocused || editorLangId == 'json' && !notebookEditorFocused || editorLangId == 'jsonc' && !notebookEditorFocused || editorLangId == 'less' && !notebookEditorFocused || editorLangId == 'objective-c' && !notebookEditorFocused || editorLangId == 'objective-cpp' && !notebookEditorFocused || editorLangId == 'php' && !notebookEditorFocused || editorLangId == 'rust' && !notebookEditorFocused || editorLangId == 'scss' && !notebookEditorFocused || editorLangId == 'shaderlab' && !notebookEditorFocused || editorLangId == 'sql' && !notebookEditorFocused || editorLangId == 'swift' && !notebookEditorFocused || editorLangId == 'typescript' && !notebookEditorFocused || editorLangId == 'typescriptreact' && !notebookEditorFocused || editorLangId == 'antlr' && !notebookEditorFocused || editorLangId == 'fsharp' && !notebookEditorFocused || editorLangId == 'qasm-lang' && !notebookEditorFocused || editorLangId == 'matlab' && !notebookEditorFocused || editorLangId == 'bibtex' && !notebookEditorFocused || editorLangId == 'tex' && !notebookEditorFocused || editorLangId == 'latex' && !notebookEditorFocused || editorLangId == 'haskell' && !notebookEditorFocused || editorLangId == 'purescript' && !notebookEditorFocused",
                    "group": "navigation"
                }
            ],
            "commandPalette": [
                {
                    "command": "markdown-everywhere.showPreviewToSide",
                    "when": "editorLangId == 'coffeescript' && !notebookEditorFocused || editorLangId == 'dockerfile' && !notebookEditorFocused || editorLangId == 'git-commit' && !notebookEditorFocused || editorLangId == 'git-rebase' && !notebookEditorFocused || editorLangId == 'diff' && !notebookEditorFocused || editorLangId == 'ignore' && !notebookEditorFocused || editorLangId == 'properties' && !notebookEditorFocused || editorLangId == 'makefile' && !notebookEditorFocused || editorLangId == 'perl' && !notebookEditorFocused || editorLangId == 'perl6' && !notebookEditorFocused || editorLangId == 'powershell' && !notebookEditorFocused || editorLangId == 'python' && !notebookEditorFocused || editorLangId == 'r' && !notebookEditorFocused || editorLangId == 'ruby' && !notebookEditorFocused || editorLangId == 'shellscript' && !notebookEditorFocused || editorLangId == 'yaml' && !notebookEditorFocused || editorLangId == 'cython' && !notebookEditorFocused || editorLangId == 'julia' && !notebookEditorFocused || editorLangId == 'cmake' && !notebookEditorFocused || editorLangId == 'c' && !notebookEditorFocused || editorLangId == 'cpp' && !notebookEditorFocused || editorLangId == 'csharp' && !notebookEditorFocused || editorLangId == 'css' && !notebookEditorFocused || editorLangId == 'go' && !notebookEditorFocused || editorLangId == 'groovy' && !notebookEditorFocused || editorLangId == 'hlsl' && !notebookEditorFocused || editorLangId == 'java' && !notebookEditorFocused || editorLangId == 'javascriptreact' && !notebookEditorFocused || editorLangId == 'javascript' && !notebookEditorFocused || editorLangId == 'json' && !notebookEditorFocused || editorLangId == 'jsonc' && !notebookEditorFocused || editorLangId == 'less' && !notebookEditorFocused || editorLangId == 'objective-c' && !notebookEditorFocused || editorLangId == 'objective-cpp' && !notebookEditorFocused || editorLangId == 'php' && !notebookEditorFocused || editorLangId == 'rust' && !notebookEditorFocused || editorLangId == 'scss' && !notebookEditorFocused || editorLangId == 'shaderlab' && !notebookEditorFocused || editorLangId == 'sql' && !notebookEditorFocused || editorLangId == 'swift' && !notebookEditorFocused || editorLangId == 'typescript' && !notebookEditorFocused || editorLangId == 'typescriptreact' && !notebookEditorFocused || editorLangId == 'antlr' && !notebookEditorFocused || editorLangId == 'fsharp' && !notebookEditorFocused || editorLangId == 'qasm-lang' && !notebookEditorFocused || editorLangId == 'matlab' && !notebookEditorFocused || editorLangId == 'bibtex' && !notebookEditorFocused || editorLangId == 'tex' && !notebookEditorFocused || editorLangId == 'latex' && !notebookEditorFocused || editorLangId == 'haskell' && !notebookEditorFocused || editorLangId == 'purescript' && !notebookEditorFocused",
                    "group": "navigation"
                }
            ]
        },
        "keybindings": [
            {
                "command": "markdown-everywhere.showPreviewToSide",
                "key": "ctrl+k v",
                "mac": "cmd+k v",
                "when": "editorLangId != 'markdown' && !notebookEditorFocused"
            }
        ],
        "grammars": [
            {
                "injectTo": [
                    "source.coffee",
                    "source.dockerfile",
                    "text.git-commit",
                    "text.git-rebase",
                    "source.diff",
                    "source.ignore",
                    "source.ini",
                    "source.makefile",
                    "source.perl",
                    "source.perl.6",
                    "source.powershell",
                    "source.python",
                    "source.r",
                    "source.ruby",
                    "source.shell",
                    "source.yaml",
                    "source.cython",
                    "source.julia",
                    "source.cmake"
                ],
                "scopeName": "comment.markdown-cell-inject.number-sign-MD.LRSW",
                "path": "./syntaxes/number-sign-MD.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.coffee",
                    "source.dockerfile",
                    "text.git-commit",
                    "text.git-rebase",
                    "source.diff",
                    "source.ignore",
                    "source.ini",
                    "source.makefile",
                    "source.perl",
                    "source.perl.6",
                    "source.powershell",
                    "source.python",
                    "source.r",
                    "source.ruby",
                    "source.shell",
                    "source.yaml",
                    "source.cython",
                    "source.julia",
                    "source.cmake"
                ],
                "scopeName": "comment.markdown-cell-inject.number-sign.LRSM",
                "path": "./syntaxes/number-sign.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.c",
                    "source.cpp",
                    "source.cs",
                    "source.css",
                    "source.go",
                    "source.groovy",
                    "source.hlsl",
                    "source.java",
                    "source.js.jsx",
                    "source.js",
                    "source.json",
                    "source.json.comments",
                    "source.css.less",
                    "source.objc",
                    "source.objcpp",
                    "text.html.php",
                    "source.rust",
                    "source.css.scss",
                    "source.shaderlab",
                    "source.sql",
                    "source.swift",
                    "source.ts",
                    "source.tsx",
                    "source.antlr"
                ],
                "scopeName": "comment.markdown-cell-inject.slash-star.MR",
                "path": "./syntaxes/slash-star.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.c",
                    "source.cpp",
                    "source.cs",
                    "source.fsharp",
                    "source.go",
                    "source.groovy",
                    "source.hlsl",
                    "source.java",
                    "source.js.jsx",
                    "source.js",
                    "source.json",
                    "source.json.comments",
                    "source.css.less",
                    "source.objc",
                    "source.objcpp",
                    "text.html.php",
                    "source.rust",
                    "source.css.scss",
                    "source.shaderlab",
                    "source.swift",
                    "source.ts",
                    "source.tsx",
                    "source.antlr",
                    "source.qasm"
                ],
                "scopeName": "comment.markdown-cell-inject.double-slash-MD.LRSW",
                "path": "./syntaxes/double-slash-MD.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.c",
                    "source.cpp",
                    "source.cs",
                    "source.fsharp",
                    "source.go",
                    "source.groovy",
                    "source.hlsl",
                    "source.java",
                    "source.js.jsx",
                    "source.js",
                    "source.json",
                    "source.json.comments",
                    "source.css.less",
                    "source.objc",
                    "source.objcpp",
                    "text.html.php",
                    "source.rust",
                    "source.css.scss",
                    "source.shaderlab",
                    "source.swift",
                    "source.ts",
                    "source.tsx",
                    "source.antlr",
                    "source.qasm"
                ],
                "scopeName": "comment.markdown-cell-inject.double-slash.LRSM",
                "path": "./syntaxes/double-slash.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.matlab",
                    "text.bibtex",
                    "text.tex",
                    "text.latex"
                ],
                "scopeName": "comment.markdown-cell-inject.percentage-MD.LRSW",
                "path": "./syntaxes/percentage-MD.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.matlab",
                    "text.bibtex",
                    "text.tex",
                    "text.latex"
                ],
                "scopeName": "comment.markdown-cell-inject.percentage.LRSM",
                "path": "./syntaxes/percentage.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.coffee",
                    "source.dockerfile",
                    "text.git-commit",
                    "text.git-rebase",
                    "source.diff",
                    "source.ignore",
                    "source.ini",
                    "source.makefile",
                    "source.perl",
                    "source.perl.6",
                    "source.powershell",
                    "source.python",
                    "source.r",
                    "source.ruby",
                    "source.shell",
                    "source.yaml",
                    "source.cython",
                    "source.julia",
                    "source.cmake"
                ],
                "scopeName": "comment.markdown-cell-inject.number-sign-double-percentage.LRSM",
                "path": "./syntaxes/number-sign-double-percentage.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.julia",
                    "source.python"
                ],
                "scopeName": "comment.markdown-cell-inject.triple-quote.BR",
                "path": "./syntaxes/triple-quote.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.julia",
                    "source.python"
                ],
                "scopeName": "comment.markdown-cell-inject.whitespace-triple-quote.MR",
                "path": "./syntaxes/whitespace-triple-quote.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.haskell",
                    "source.purescript"
                ],
                "scopeName": "comment.markdown-cell-inject.brace-dash.BR",
                "path": "./syntaxes/brace-dash.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.haskell",
                    "source.purescript"
                ],
                "scopeName": "comment.markdown-cell-inject.double-dash-MD.LRSW",
                "path": "./syntaxes/double-dash-MD.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.haskell",
                    "source.purescript"
                ],
                "scopeName": "comment.markdown-cell-inject.double-dash.LRSM",
                "path": "./syntaxes/double-dash.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.rust"
                ],
                "scopeName": "comment.markdown-cell-inject.double-slash-exclamation.LRSW",
                "path": "./syntaxes/double-slash-exclamation.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.rust"
                ],
                "scopeName": "comment.markdown-cell-inject.triple-slash.LRSW",
                "path": "./syntaxes/triple-slash.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            },
            {
                "injectTo": [
                    "source.rust"
                ],
                "scopeName": "comment.markdown-cell-inject.slash-start-exclamation.BR",
                "path": "./syntaxes/slash-start-exclamation.json",
                "embeddedLanguages": {
                    "meta.embedded.block.everywhere.md": "markdown"
                }
            }
        ]
    },
    "activationEvents": [
        "onLanguage:coffeescript",
        "onLanguage:dockerfile",
        "onLanguage:git-commit",
        "onLanguage:git-rebase",
        "onLanguage:diff",
        "onLanguage:ignore",
        "onLanguage:properties",
        "onLanguage:makefile",
        "onLanguage:perl",
        "onLanguage:perl6",
        "onLanguage:powershell",
        "onLanguage:python",
        "onLanguage:r",
        "onLanguage:ruby",
        "onLanguage:shellscript",
        "onLanguage:yaml",
        "onLanguage:cython",
        "onLanguage:julia",
        "onLanguage:cmake",
        "onLanguage:c",
        "onLanguage:cpp",
        "onLanguage:csharp",
        "onLanguage:css",
        "onLanguage:go",
        "onLanguage:groovy",
        "onLanguage:hlsl",
        "onLanguage:java",
        "onLanguage:javascriptreact",
        "onLanguage:javascript",
        "onLanguage:json",
        "onLanguage:jsonc",
        "onLanguage:less",
        "onLanguage:objective-c",
        "onLanguage:objective-cpp",
        "onLanguage:php",
        "onLanguage:rust",
        "onLanguage:scss",
        "onLanguage:shaderlab",
        "onLanguage:sql",
        "onLanguage:swift",
        "onLanguage:typescript",
        "onLanguage:typescriptreact",
        "onLanguage:antlr",
        "onLanguage:fsharp",
        "onLanguage:qasm-lang",
        "onLanguage:matlab",
        "onLanguage:bibtex",
        "onLanguage:tex",
        "onLanguage:latex",
        "onLanguage:haskell",
        "onLanguage:purescript"
    ]
}